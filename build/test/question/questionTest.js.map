{"version":3,"sources":["../../../api/test/question/questionTest.js"],"names":["require","describe","it","chai","use","chaiHttp","should","done","id","request","app","post","end","err","res","have","status","patch"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;;;eAEyBA,QAAQ,OAAR,C;IAAjBC,Q,YAAAA,Q;IAAUC,E,YAAAA,E;AAClB;AANA;;;AAOAC,eAAKC,GAAL,CAASC,kBAAT;AACAF,eAAKG,MAAL;;AAEAL,SAAS,4BAAT,EAAuC,YAAM;AAC3CA,WAAS,iBAAT,EAA4B,YAAM;AAChCC,OAAG,+DAAH,EAAoE,UAACK,IAAD,EAAU;AAC5E,UAAMC,KAAK,CAAX;AACAL,qBAAKM,OAAL,CAAaC,gBAAb,EACGC,IADH,OACYH,EADZ,EAEGI,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,YAAIR,MAAJ,CAAWS,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAT;AACD,OALH;AAMD,KARD;AASD,GAVD;;AAYAN,WAAS,uCAAT,EAAkD,YAAM;AACtDC,OAAG,kDAAH,EAAuD,UAACK,IAAD,EAAU;AAC/D,UAAMC,KAAK,CAAX;AACAL,qBAAKM,OAAL,CAAaC,gBAAb,EACGO,KADH,wBAC8BT,EAD9B,cAEGI,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,YAAIR,MAAJ,CAAWS,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAT;AACD,OALH;AAMD,KARD;AASD,GAVD;;AAYAN,WAAS,yCAAT,EAAoD,YAAM;AACxDC,OAAG,oDAAH,EAAyD,UAACK,IAAD,EAAU;AACjE,UAAMC,KAAK,CAAX;AACAL,qBAAKM,OAAL,CAAaC,gBAAb,EACGC,IADH,wBAC6BH,EAD7B,gBAEGI,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,YAAIR,MAAJ,CAAWS,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAT;AACD,OALH;AAMD,KARD;AASD,GAVD;AAWD,CApCD","file":"questionTest.js","sourcesContent":["// Import the dependencies for testing\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../../server';\r\n\r\nconst { describe, it } = require('mocha');\r\n// Configure chai\r\nchai.use(chaiHttp);\r\nchai.should();\r\n\r\ndescribe('Test for question resource', () => {\r\n  describe('POST /questions', () => {\r\n    it('should not create a question for a meetup that does not exist', (done) => {\r\n      const id = 5;\r\n      chai.request(app)\r\n        .post(`/${id}`)\r\n        .end((err, res) => {\r\n          res.should.have.status(404);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('PATCH /questions/<question-id>/upvote', () => {\r\n    it('should not upvote a question that does not exist', (done) => {\r\n      const id = 5;\r\n      chai.request(app)\r\n        .patch(`/api/v1/questions/${id}/upvote`)\r\n        .end((err, res) => {\r\n          res.should.have.status(404);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe('PATCH /questions/<question-id>/downvote', () => {\r\n    it('should not downvote a question that does not exist', (done) => {\r\n      const id = 5;\r\n      chai.request(app)\r\n        .post(`/api/v1/questions/${id}/downvote`)\r\n        .end((err, res) => {\r\n          res.should.have.status(404);\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"]}