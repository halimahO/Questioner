{"version":3,"sources":["../../api/models/meetup.js"],"names":["Meetup","meetups","data","newId","array","length","id","newMeetup","Number","createdOn","format","location","String","images","topic","happeningOn","tags","push","find","filter"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEMA,M;AACJ,oBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,EAAf;AACD;;AAED;;;;;iCACaC,I,EAAM;AACjB,UAAMC,QAAQ,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,YAAIA,MAAMC,MAAN,GAAe,CAAnB,EAAsB;AACpB,iBAAOD,MAAMA,MAAMC,MAAN,GAAe,CAArB,EAAwBC,EAAxB,GAA6B,CAApC;AACD;AACD,eAAO,CAAP;AACD,OALD;AAMA,UAAMC,YAAY;AAChBD,YAAIE,OAAOL,MAAM,KAAKF,OAAX,CAAP,CADY;AAEhBQ,mBAAW,wBAASC,MAAT,CAAgB,MAAhB,CAFK;AAGhBC,kBAAUC,OAAOV,KAAKS,QAAZ,CAHM;AAIhBE,gBAAQX,KAAKW,MAJG;AAKhBC,eAAOF,OAAOV,KAAKY,KAAZ,CALS;AAMhBC,qBAAa,sBAAOb,KAAKa,WAAZ,EAAyBL,MAAzB,CAAgC,MAAhC,CANG;AAOhBM,cAAM,CAACd,KAAKc,IAAN;AAPU,OAAlB;AASA,WAAKf,OAAL,CAAagB,IAAb,CAAkBV,SAAlB;AACA,aAAOA,SAAP;AACD;;AAED;;;;mCACeD,E,EAAI;AACjB;AACA,aAAO,KAAKL,OAAL,CAAaiB,IAAb,CAAkB;AAAA,eAAQhB,KAAKI,EAAL,IAAWA,EAAnB;AAAA,OAAlB,CAAP;AACD;;AAED;;;;qCACiB;AACf,aAAO,KAAKL,OAAZ;AACD;;AAED;;;;kCACc;AACZ,aAAO,KAAKA,OAAL,CAAakB,MAAb,CAAoB;AAAA,eAAQjB,KAAKa,WAAL,IAAoB,wBAASL,MAAT,CAAgB,MAAhB,CAA5B;AAAA,OAApB,CAAP;AACD;;;;;;kBAGY,IAAIV,MAAJ,E","file":"meetup.js","sourcesContent":["import moment from 'moment';\r\n\r\nclass Meetup {\r\n  constructor() {\r\n    this.meetups = [];\r\n  }\r\n\r\n  // Model for create a meetup record\r\n  createMeetup(data) {\r\n    const newId = (array) => {\r\n      if (array.length > 0) {\r\n        return array[array.length - 1].id + 1;\r\n      }\r\n      return 1;\r\n    };\r\n    const newMeetup = {\r\n      id: Number(newId(this.meetups)),\r\n      createdOn: moment().format('LLLL'),\r\n      location: String(data.location),\r\n      images: data.images,\r\n      topic: String(data.topic),\r\n      happeningOn: moment(data.happeningOn).format('LLLL'),\r\n      tags: [data.tags],\r\n    };\r\n    this.meetups.push(newMeetup);\r\n    return newMeetup;\r\n  }\r\n\r\n  // Model for fetch a specific meetup record\r\n  fetchOneMeetup(id) {\r\n    // eslint-disable-next-line eqeqeq\r\n    return this.meetups.find(data => data.id == id);\r\n  }\r\n\r\n  // Model for fetch all meetup records\r\n  fetchAllMeetup() {\r\n    return this.meetups;\r\n  }\r\n\r\n  // Model for fetch all upcoming meetup records\r\n  getUpcoming() {\r\n    return this.meetups.filter(data => data.happeningOn >= moment().format('LLLL'));\r\n  }\r\n}\r\n\r\nexport default new Meetup();\r\n"]}